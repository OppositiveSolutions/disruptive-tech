package com.careerfocus.entity;

import java.util.*;
import javax.persistence.*;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

/**
 * Auto-generated by:
 * org.apache.openjpa.jdbc.meta.ReverseMappingTool$AnnotatedCodeGenerator
 */
@Entity
@Table(name="user")
//@IdClass(UserId.class)
@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
public class User {
	
	@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property="addressId", scope=Address.class)
	@ManyToMany(targetEntity=Address.class, mappedBy="users", cascade=CascadeType.MERGE)
	private Set<Address> address = new HashSet<Address>();

	@Basic
	@Column(name="created_date", nullable=false)
	private Date createdDate;

	@Basic
	@Temporal(TemporalType.DATE)
	private Date dob;

	@Basic
	@Column(name="first_name", nullable=false, length=46)
	private String firstName;

	@Basic
	@Column(length=11)
	private String gender;

	@Basic
	@Column(name="last_name", nullable=false, length=46)
	private String lastName;

	@Basic
	@Column(nullable=false, length=45)
	private String password;

	@Basic
	@Column(columnDefinition="INT")
	private int role;

	@JsonBackReference
	@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property="studentId", scope=Student.class)
	@OneToMany(targetEntity=Student.class, mappedBy="user", cascade=CascadeType.MERGE)
	private Set<Student> students = new HashSet<Student>();

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name="user_id", columnDefinition="INT")
	private int userId;

	@OneToMany(targetEntity=UserPhone.class, mappedBy="user", cascade=CascadeType.MERGE)
	private Set<UserPhone> userPhones = new HashSet<UserPhone>();

//	@OneToOne(fetch=FetchType.LAZY, mappedBy="user", cascade=CascadeType.MERGE)
//	private UserProfilePic userProfilePic;

	@Basic
	@Column(nullable=false, length=45)
	private String username;


	public User() {
	}

	public User(int userId) {
		this.userId = userId;
	}

	public Set<Address> getAddress() {
		return address;
	}

	public void setAddress(Set<Address> address) {
		this.address = address;
	}

	public Date getCreatedDate() {
		return createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	public Date getDob() {
		return dob;
	}

	public void setDob(Date dob) {
		this.dob = dob;
	}

	public String getFirstName() {
		return firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	public String getGender() {
		return gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	public String getLastName() {
		return lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getRole() {
		return role;
	}

	public void setRole(int role) {
		this.role = role;
	}

	public Set<Student> getStudents() {
		return students;
	}

	public void setStudents(Set<Student> students) {
		this.students = students;
	}

	public int getUserId() {
		return userId;
	}

	public void setUserId(int userId) {
		this.userId = userId;
	}

	public Set<UserPhone> getUserPhones() {
		return userPhones;
	}

	public void setUserPhones(Set<UserPhone> userPhones) {
		this.userPhones = userPhones;
	}

//	public UserProfilePic getUserProfilePic() {
//		return userProfilePic;
//	}
//
//	public void setUserProfilePic(UserProfilePic userProfilePic) {
//		this.userProfilePic = userProfilePic;
//	}

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}
}