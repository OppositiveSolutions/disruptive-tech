package com.careerfocus.entity;

import java.util.*;
import javax.persistence.*;

/**
 * Auto-generated by:
 * org.apache.openjpa.jdbc.meta.ReverseMappingTool$AnnotatedCodeGenerator
 */
@Entity
@Table(name="question_paper_category")
public class QuestionPaperCategory {
	@ManyToOne(fetch=FetchType.LAZY, cascade=CascadeType.MERGE)
	@JoinColumn(name="category_id", columnDefinition="INT", nullable=false)
	private Category category;

	@Basic
	@Column(name="negative_mark", columnDefinition="INT")
	private int negativeMark;

	@Basic
	@Column(name="no_of_questions", columnDefinition="INT")
	private int noOfQuestions;

	@Basic
	@Column(name="no_of_sub_category", columnDefinition="INT")
	private int noOfSubCategory;

	@ManyToOne(fetch=FetchType.LAZY, cascade=CascadeType.MERGE)
	@JoinColumn(name="question_paper_id", columnDefinition="INT", nullable=false)
	private QuestionPaper questionPaper;

	@Id
	@Column(name="question_paper_category_id", columnDefinition="INT")
	private int questionPaperCategoryId;

	@OneToMany(targetEntity=QuestionPaperSubCategory.class, mappedBy="questionPaperCategory", cascade=CascadeType.MERGE)
	private Set<QuestionPaperSubCategory> questionPaperSubCategorys = new HashSet<QuestionPaperSubCategory>();

	@Basic
	@Column(columnDefinition="INT")
	private int weightage;


	public QuestionPaperCategory() {
	}

	public QuestionPaperCategory(int questionPaperCategoryId) {
		this.questionPaperCategoryId = questionPaperCategoryId;
	}

	public Category getCategory() {
		return category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	public int getNegativeMark() {
		return negativeMark;
	}

	public void setNegativeMark(int negativeMark) {
		this.negativeMark = negativeMark;
	}

	public int getNoOfQuestions() {
		return noOfQuestions;
	}

	public void setNoOfQuestions(int noOfQuestions) {
		this.noOfQuestions = noOfQuestions;
	}

	public int getNoOfSubCategory() {
		return noOfSubCategory;
	}

	public void setNoOfSubCategory(int noOfSubCategory) {
		this.noOfSubCategory = noOfSubCategory;
	}

	public QuestionPaper getQuestionPaper() {
		return questionPaper;
	}

	public void setQuestionPaper(QuestionPaper questionPaper) {
		this.questionPaper = questionPaper;
	}

	public int getQuestionPaperCategoryId() {
		return questionPaperCategoryId;
	}

	public void setQuestionPaperCategoryId(int questionPaperCategoryId) {
		this.questionPaperCategoryId = questionPaperCategoryId;
	}

	public Set<QuestionPaperSubCategory> getQuestionPaperSubCategorys() {
		return questionPaperSubCategorys;
	}

	public void setQuestionPaperSubCategorys(Set<QuestionPaperSubCategory> questionPaperSubCategorys) {
		this.questionPaperSubCategorys = questionPaperSubCategorys;
	}

	public int getWeightage() {
		return weightage;
	}

	public void setWeightage(int weightage) {
		this.weightage = weightage;
	}
}